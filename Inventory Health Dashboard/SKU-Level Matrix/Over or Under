# DAX Code:

(SKU-Level Matrix) Over/Under = 
VAR CurrentRunningInventory = SUM('Consolidated On-Hand Inventory'[On-Hand Quantity]) -- Inventory for the SKU
VAR TodayStartOfWeek = TODAY() - WEEKDAY(TODAY(), 2) + 1 -- Start of this week's Sunday
VAR FutureWeeks =
    FILTER(
        ALL('Rolling Calendar'),
        'Rolling Calendar'[Start of Week] > TodayStartOfWeek -- Only future weeks
    ) -- Filter to exclude the current week
VAR Future13Weeks =
    TOPN(13, FutureWeeks, 'Rolling Calendar'[Start of Week], ASC) -- Next 13 weeks, ordered by start date
VAR AverageFutureDemand =
    AVERAGEX(
        Future13Weeks,
        CALCULATE(SUM('Consolidated Demand Forecast'[Demand Quantity]))
    ) -- Calculate average demand for the next 13 weeks
VAR MinimumStock = 
    SUM('Consolidated Master Data'[Safety Stock Level]) -- Minimum stock level
VAR MaximumStock = 
    SUM('Consolidated Master Data'[Maximum Qty]) -- Maximum stock level

-- Calculate Over/Under Weeks
VAR UnderWeeks =
    DIVIDE(
        MinimumStock - CurrentRunningInventory,
        AverageFutureDemand,
        0 -- Handle division by zero
    )
VAR OverWeeks =
    DIVIDE(
        CurrentRunningInventory - MaximumStock,
        AverageFutureDemand,
        0 -- Handle division by zero
    )

-- Output Based on Conditions
RETURN
    SWITCH(
        TRUE(),
        CurrentRunningInventory = 0 && AverageFutureDemand = 0, "Good", -- Both stock and demand are zero
        CurrentRunningInventory >= MinimumStock && CurrentRunningInventory <= MaximumStock, "Good", -- Between min and max
        CurrentRunningInventory < MinimumStock && AverageFutureDemand = 0, "Under", -- Below minimum, no demand
        CurrentRunningInventory > MaximumStock && AverageFutureDemand = 0, "Over", -- Above maximum, no demand
        CurrentRunningInventory < MinimumStock, "-" & FORMAT(UnderWeeks, "0.0") & " wks", -- Below minimum with weeks
        CurrentRunningInventory > MaximumStock, "+" & FORMAT(OverWeeks, "0.0") & " wks", -- Above maximum with weeks
        BLANK() -- Default case
    )

# Explanation:

This measure determines whether a SKU has too much stock, too little stock, or just the right amount. It starts by finding
the current On-Hand Inventory quantity and compares it to the minimum and maximum preferred stock levels set by the
company. Then, it calculates the average demand over the next 13 weeks to understand how fast the inventory is being
used up.
- If the inventory is between minimum and maximum range, the measure labels it as "Good".
- If the inventory is above maximum range, but there is no demand then it outputs "Over".
- If the inventory is below minimum range, but there is no demand then it outputs "Under".
- If inventory is too low and there is demand, it calculates how many weeks it will take for stock to reach the minimum level.
- If inventory is too high and there is demand, it calculates how many weeks it will take for stock to drop to the maximum level.

This measure helps the operations team identify stock imbalances so they can restock or slow down purchasing as needed.

The reason why there are two different DAX measures for Over/Under is because DAX measures are filter-context specific. In
Power BI, every visual applies its own filters based on the fields being used, which directly affects how DAX
calculations behave. Because of this, a single DAX measure can't always be used in multiple visuals if the filter
context is different. In this case, the matrix is filtered by SKU + Description while the Start of Week matrix
is filtered by Start of Week (Sunday).

# Used in:

- Top-Risk SKUs Matrix
